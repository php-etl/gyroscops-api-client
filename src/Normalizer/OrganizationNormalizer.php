<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Gyroscops\Api\Normalizer;

use Gyroscops\Api\Runtime\Normalizer\CheckArray;
use Gyroscops\Api\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

class OrganizationNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
{
    use DenormalizerAwareTrait;
    use NormalizerAwareTrait;
    use CheckArray;
    use ValidatorTrait;

    public function supportsDenormalization($data, $type, $format = null, array $context = []): bool
    {
        return $type === 'Gyroscops\\Api\\Model\\Organization';
    }

    public function supportsNormalization($data, $format = null, array $context = []): bool
    {
        return is_object($data) && get_class($data) === 'Gyroscops\\Api\\Model\\Organization';
    }

    /**
     * @return mixed
     */
    public function denormalize($data, $class, $format = null, array $context = [])
    {
        if (isset($data['$ref'])) {
            return new Reference($data['$ref'], $context['document-origin']);
        }
        if (isset($data['$recursiveRef'])) {
            return new Reference($data['$recursiveRef'], $context['document-origin']);
        }
        $object = new \Gyroscops\Api\Model\Organization();
        if (null === $data || false === \is_array($data)) {
            return $object;
        }
        if (\array_key_exists('id', $data) && $data['id'] !== null) {
            $object->setId($data['id']);
            unset($data['id']);
        } elseif (\array_key_exists('id', $data) && $data['id'] === null) {
            $object->setId(null);
        }
        if (\array_key_exists('authorizations', $data) && $data['authorizations'] !== null) {
            $values = [];
            foreach ($data['authorizations'] as $value) {
                $values[] = $value;
            }
            $object->setAuthorizations($values);
            unset($data['authorizations']);
        } elseif (\array_key_exists('authorizations', $data) && $data['authorizations'] === null) {
            $object->setAuthorizations(null);
        }
        if (\array_key_exists('name', $data) && $data['name'] !== null) {
            $object->setName($data['name']);
            unset($data['name']);
        } elseif (\array_key_exists('name', $data) && $data['name'] === null) {
            $object->setName(null);
        }
        if (\array_key_exists('slug', $data) && $data['slug'] !== null) {
            $object->setSlug($data['slug']);
            unset($data['slug']);
        } elseif (\array_key_exists('slug', $data) && $data['slug'] === null) {
            $object->setSlug(null);
        }
        if (\array_key_exists('stripeCode', $data) && $data['stripeCode'] !== null) {
            $object->setStripeCode($data['stripeCode']);
            unset($data['stripeCode']);
        } elseif (\array_key_exists('stripeCode', $data) && $data['stripeCode'] === null) {
            $object->setStripeCode(null);
        }
        if (\array_key_exists('users', $data) && $data['users'] !== null) {
            $values_1 = [];
            foreach ($data['users'] as $value_1) {
                $values_1[] = $value_1;
            }
            $object->setUsers($values_1);
            unset($data['users']);
        } elseif (\array_key_exists('users', $data) && $data['users'] === null) {
            $object->setUsers(null);
        }
        if (\array_key_exists('externalCollaborators', $data) && $data['externalCollaborators'] !== null) {
            $values_2 = [];
            foreach ($data['externalCollaborators'] as $value_2) {
                $values_2[] = $value_2;
            }
            $object->setExternalCollaborators($values_2);
            unset($data['externalCollaborators']);
        } elseif (\array_key_exists('externalCollaborators', $data) && $data['externalCollaborators'] === null) {
            $object->setExternalCollaborators(null);
        }
        if (\array_key_exists('workspaces', $data) && $data['workspaces'] !== null) {
            $values_3 = [];
            foreach ($data['workspaces'] as $value_3) {
                $values_3[] = $value_3;
            }
            $object->setWorkspaces($values_3);
            unset($data['workspaces']);
        } elseif (\array_key_exists('workspaces', $data) && $data['workspaces'] === null) {
            $object->setWorkspaces(null);
        }
        if (\array_key_exists('activeUntil', $data) && $data['activeUntil'] !== null) {
            $object->setActiveUntil(\DateTime::createFromFormat('Y-m-d\\TH:i:sP', $data['activeUntil']));
            unset($data['activeUntil']);
        } elseif (\array_key_exists('activeUntil', $data) && $data['activeUntil'] === null) {
            $object->setActiveUntil(null);
        }
        foreach ($data as $key => $value_4) {
            if (preg_match('/.*/', (string) $key)) {
                $object[$key] = $value_4;
            }
        }

        return $object;
    }

    /**
     * @return array|string|int|float|bool|\ArrayObject|null
     */
    public function normalize($object, $format = null, array $context = [])
    {
        $data = [];
        if ($object->isInitialized('authorizations') && null !== $object->getAuthorizations()) {
            $values = [];
            foreach ($object->getAuthorizations() as $value) {
                $values[] = $value;
            }
            $data['authorizations'] = $values;
        }
        $data['name'] = $object->getName();
        if ($object->isInitialized('slug') && null !== $object->getSlug()) {
            $data['slug'] = $object->getSlug();
        }
        if ($object->isInitialized('stripeCode') && null !== $object->getStripeCode()) {
            $data['stripeCode'] = $object->getStripeCode();
        }
        if ($object->isInitialized('users') && null !== $object->getUsers()) {
            $values_1 = [];
            foreach ($object->getUsers() as $value_1) {
                $values_1[] = $value_1;
            }
            $data['users'] = $values_1;
        }
        if ($object->isInitialized('externalCollaborators') && null !== $object->getExternalCollaborators()) {
            $values_2 = [];
            foreach ($object->getExternalCollaborators() as $value_2) {
                $values_2[] = $value_2;
            }
            $data['externalCollaborators'] = $values_2;
        }
        if ($object->isInitialized('workspaces') && null !== $object->getWorkspaces()) {
            $values_3 = [];
            foreach ($object->getWorkspaces() as $value_3) {
                $values_3[] = $value_3;
            }
            $data['workspaces'] = $values_3;
        }
        if ($object->isInitialized('activeUntil') && null !== $object->getActiveUntil()) {
            $data['activeUntil'] = $object->getActiveUntil()->format('Y-m-d\\TH:i:sP');
        }
        foreach ($object as $key => $value_4) {
            if (preg_match('/.*/', (string) $key)) {
                $data[$key] = $value_4;
            }
        }

        return $data;
    }
}
